{"version":3,"sources":["Components/Dropdown/Dropdown.js","Components/Modal/Modal.js","Components/Editabled/Editable.js","Components/Card/CardInfo/CardInfo.js","Components/Card/Card.js","Components/Board/Board.js","Instructions.js","App.js","Components/Start/Start.js","App1.js","index.js"],"names":["Dropdown","props","dropdownRef","useRef","handleClick","event","_dropdownRef$current","current","contains","target","onClose","useEffect","document","addEventListener","removeEventListener","_jsx","ref","className","concat","class","children","Modal","onClick","stopPropagation","Editable","_useState","useState","_useState2","_slicedToArray","isEditable","setIsEditable","_useState3","defaultValue","_useState4","inputText","setInputText","_jsxs","editClass","onSubmit","e","preventDefault","type","value","placeholder","text","onChange","autoFocus","buttonText","X","displayClass","CardInfo","_values$labels","_values$tasks4","selectedColor","setSelectedColor","_objectSpread","card","values","setValues","calculatePercent","_values$tasks","_values$tasks2","_values$tasks2$filter","_values$tasks3","tasks","length","filter","item","completed","updateCard","boardId","id","Type","title","List","desc","Calendar","date","min","Date","toISOString","substr","Tag","labels","map","index","style","backgroundColor","color","label","tempLabels","removeLabel","findIndex","_toConsumableArray","CheckSquare","width","defaultChecked","updateTask","checked","Trash","tempTasks","removeTask","task","now","Math","random","Card","_tasks$filter","showDropdown","setShowDropdown","showModal","setShowModal","_props$card","_Fragment","draggable","onDragEnd","dragEnded","onDragEnter","dragEntered","MoreHorizontal","removeCard","Clock","getDate","getMonth","formatDate","Board","_props$board","_props$board2","_props$board2$cards","_props$board3","_props$board3$cards","board","cards","removeBoard","_props$board4","addCard","Instructions","_ref","dismiss","onDismiss","zIndex","App","hideInstructions","setHideInstructions","JSON","parse","localStorage","getItem","boards","setBoards","_useState5","bid","cid","_useState6","targetCard","setTargetCard","addCardHandler","tempBoards","push","cardIndex","splice","_boards$s_boardIndex","_boards$s_boardIndex$","_boards$t_boardIndex","_boards$t_boardIndex$","s_boardIndex","s_cardIndex","t_boardIndex","t_cardIndex","sourceCard","setItem","stringify","height","borderWidth","window","name","borderColor","Start","setname","location","href","App1","Router","Routes","Route","exact","path","element","ReactDOM","render","React","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.95898d8b.chunk.js","sourcesContent":["import React, { useEffect, useRef } from \"react\";\n\nimport \"./Dropdown.css\";\n\nfunction Dropdown(props) {\n  const dropdownRef = useRef();\n\n  const handleClick = (event) => {\n    if (\n      dropdownRef &&\n      !dropdownRef.current?.contains(event.target) &&\n      props.onClose\n    )\n      props.onClose();\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClick);\n\n    return () => {\n      document.removeEventListener(\"click\", handleClick);\n    };\n  });\n\n  return (\n    <div\n      ref={dropdownRef}\n      className={`dropdown custom-scroll ${props.class ? props.class : \"\"}`}\n    >\n      {props.children}\n    </div>\n  );\n}\n\nexport default Dropdown;\n","import React from \"react\";\n\nimport \"./Modal.css\";\n\nfunction Modal(props) {\n  return (\n    <div\n      className=\"modal\"\n      onClick={() => (props.onClose ? props.onClose() : \"\")}\n    >\n      <div\n        className=\"modal_content custom-scroll\"\n        onClick={(event) => event.stopPropagation()}\n      >\n        {props.children}\n      </div>\n    </div>\n  );\n}\n\nexport default Modal;\n","import React, { useState } from \"react\";\n\nimport { X } from \"react-feather\";\n\nimport \"./Editable.css\";\n\nfunction Editable(props) {\n  const [isEditable, setIsEditable] = useState(false);\n  const [inputText, setInputText] = useState(props.defaultValue || \"\");\n\n  const submission = (e) => {\n    e.preventDefault();\n    if (inputText && props.onSubmit) {\n      setInputText(\"\");\n      props.onSubmit(inputText);\n    }\n    setIsEditable(false);\n  };\n\n  return (\n    <div className=\"editable\">\n      {isEditable ? (\n        <form\n          className={`editable_edit ${props.editClass ? props.editClass : \"\"}`}\n          onSubmit={submission}\n        >\n          <input\n            type=\"text\"\n            value={inputText}\n            placeholder={props.placeholder || props.text}\n            onChange={(event) => setInputText(event.target.value)}\n            autoFocus\n          />\n          <div className=\"editable_edit_footer\">\n            <button type=\"submit\">{props.buttonText || \"Add\"}</button>\n            <X onClick={() => setIsEditable(false)} className=\"closeIcon\" />\n          </div>\n        </form>\n      ) : (\n        <p\n          className={`editable_display ${\n            props.displayClass ? props.displayClass : \"\"\n          }`}\n          onClick={() => setIsEditable(true)}\n        >\n          {props.text}\n        </p>\n      )}\n    </div>\n  );\n}\n\nexport default Editable;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Calendar,\n  CheckSquare,\n  List,\n  Tag,\n  Trash,\n  Type,\n  X,\n} from \"react-feather\";\n\nimport Modal from \"../../Modal/Modal\";\nimport Editable from \"../../Editabled/Editable\";\n\nimport \"./CardInfo.css\";\n\nfunction CardInfo(props) {\n  const colors = [\n    \"#a8193d\",\n    \"#4fcc25\",\n    \"#1ebffa\",\n    \"#8da377\",\n    \"#9975bd\",\n    \"#cf61a1\",\n    \"#240959\",\n  ];\n\n  const [selectedColor, setSelectedColor] = useState();\n  const [values, setValues] = useState({\n    ...props.card,\n  });\n\n  const updateTitle = (value) => {\n    setValues({ ...values, title: value });\n  };\n\n  const updateDesc = (value) => {\n    setValues({ ...values, desc: value });\n  };\n\n  const addLabel = (label) => {\n    const index = values.labels.findIndex((item) => item.text === label.text);\n    if (index > -1) return;\n\n    setSelectedColor(\"\");\n    setValues({\n      ...values,\n      labels: [...values.labels, label],\n    });\n  };\n\n  const removeLabel = (label) => {\n    const tempLabels = values.labels.filter((item) => item.text !== label.text);\n\n    setValues({\n      ...values,\n      labels: tempLabels,\n    });\n  };\n\n  const addTask = (value) => {\n    const task = {\n      id: Date.now() + Math.random() * 2,\n      completed: false,\n      text: value,\n    };\n    setValues({\n      ...values,\n      tasks: [...values.tasks, task],\n    });\n  };\n\n  const removeTask = (id) => {\n    const tasks = [...values.tasks];\n\n    const tempTasks = tasks.filter((item) => item.id !== id);\n    setValues({\n      ...values,\n      tasks: tempTasks,\n    });\n  };\n\n  const updateTask = (id, value) => {\n    const tasks = [...values.tasks];\n\n    const index = tasks.findIndex((item) => item.id === id);\n    if (index < 0) return;\n\n    tasks[index].completed = value;\n\n    setValues({\n      ...values,\n      tasks,\n    });\n  };\n\n  const calculatePercent = () => {\n    if (!values.tasks?.length) return 0;\n    const completed = values.tasks?.filter((item) => item.completed)?.length;\n    return (completed / values.tasks?.length) * 100;\n  };\n\n  const updateDate = (date) => {\n    if (!date) return;\n\n    setValues({\n      ...values,\n      date,\n    });\n  };\n\n  useEffect(() => {\n    if (props.updateCard) props.updateCard(props.boardId, values.id, values);\n  }, [values]);\n\n  return (\n    <Modal onClose={props.onClose}>\n      <div className=\"cardinfo\">\n        <div className=\"cardinfo_box\">\n          <div className=\"cardinfo_box_title\">\n            <Type />\n            <p>Title</p>\n          </div>\n          <Editable\n            defaultValue={values.title}\n            text={values.title}\n            placeholder=\"Enter Title\"\n            onSubmit={updateTitle}\n          />\n        </div>\n\n        <div className=\"cardinfo_box\">\n          <div className=\"cardinfo_box_title\">\n            <List />\n            <p>Description</p>\n          </div>\n          <Editable\n            defaultValue={values.desc}\n            text={values.desc || \"Add a Description\"}\n            placeholder=\"Enter description\"\n            onSubmit={updateDesc}\n          />\n        </div>\n\n        <div className=\"cardinfo_box\">\n          <div className=\"cardinfo_box_title\">\n            <Calendar />\n            <p>Date</p>\n          </div>\n          <input\n            type=\"date\"\n            defaultValue={values.date}\n            min={new Date().toISOString().substr(0, 10)}\n            onChange={(event) => updateDate(event.target.value)}\n          />\n        </div>\n\n        <div className=\"cardinfo_box\">\n          <div className=\"cardinfo_box_title\">\n            <Tag />\n            <p>Labels</p>\n          </div>\n          <div className=\"cardinfo_box_labels\">\n            {values.labels?.map((item, index) => (\n              <label\n                key={index}\n                style={{ backgroundColor: item.color, color: \"#fff\" }}\n              >\n                {item.text}\n                <X onClick={() => removeLabel(item)} />\n              </label>\n            ))}\n          </div>\n          <ul>\n            {colors.map((item, index) => (\n              <li\n                key={index + item}\n                style={{ backgroundColor: item }}\n                className={selectedColor === item ? \"li_active\" : \"\"}\n                onClick={() => setSelectedColor(item)}\n              />\n            ))}\n          </ul>\n          <Editable\n            text=\"Add Label\"\n            placeholder=\"Enter label text\"\n            onSubmit={(value) =>\n              addLabel({ color: selectedColor, text: value })\n            }\n          />\n        </div>\n\n        <div className=\"cardinfo_box\">\n          <div className=\"cardinfo_box_title\">\n            <CheckSquare />\n            <p>Tasks</p>\n          </div>\n          <div className=\"cardinfo_box_progress-bar\">\n            <div\n              className=\"cardinfo_box_progress\"\n              style={{\n                width: `${calculatePercent()}%`,\n                backgroundColor: calculatePercent() === 100 ? \"limegreen\" : \"\",\n              }}\n            />\n          </div>\n          <div className=\"cardinfo_box_task_list\">\n            {values.tasks?.map((item) => (\n              <div key={item.id} className=\"cardinfo_box_task_checkbox\">\n                <input\n                  type=\"checkbox\"\n                  defaultChecked={item.completed}\n                  onChange={(event) =>\n                    updateTask(item.id, event.target.checked)\n                  }\n                />\n                <p className={item.completed ? \"completed\" : \"\"}>{item.text}</p>\n                <Trash onClick={() => removeTask(item.id)} />\n              </div>\n            ))}\n          </div>\n          <Editable\n            text={\"Add a Task\"}\n            placeholder=\"Enter task\"\n            onSubmit={addTask}\n          />\n        </div>\n      </div>\n    </Modal>\n  );\n}\n\nexport default CardInfo;\n","import React, { useState } from \"react\";\nimport { CheckSquare, Clock, MoreHorizontal } from \"react-feather\";\n\nimport Dropdown from \"../Dropdown/Dropdown\";\n\nimport \"./Card.css\";\nimport CardInfo from \"./CardInfo/CardInfo\";\n\nfunction Card(props) {\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n  const { id, title, date, tasks, labels } = props.card;\n\n  const formatDate = (value) => {\n    if (!value) return \"\";\n    const date = new Date(value);\n    if (!date) return \"\";\n\n    const months = [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Aprl\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\",\n    ];\n\n    const day = date.getDate();\n    const month = months[date.getMonth()];\n    return day + \" \" + month;\n  };\n\n  return (\n    <>\n      {showModal && (\n        <CardInfo\n          onClose={() => setShowModal(false)}\n          card={props.card}\n          boardId={props.boardId}\n          updateCard={props.updateCard}\n        />\n      )}\n      <div\n        className=\"card\"\n        draggable\n        onDragEnd={() => props.dragEnded(props.boardId, id)}\n        onDragEnter={() => props.dragEntered(props.boardId, id)}\n        onClick={() => setShowModal(true)}\n      >\n        <div className=\"card_top\">\n          <div className=\"card_top_labels\">\n            {labels?.map((item, index) => (\n              <label key={index} style={{ backgroundColor: item.color }}>\n                {item.text}\n              </label>\n            ))}\n          </div>\n          <div\n            className=\"card_top_more\"\n            onClick={(event) => {\n              event.stopPropagation();\n              setShowDropdown(true);\n            }}\n          >\n            <MoreHorizontal />\n            {showDropdown && (\n              <Dropdown\n                class=\"board_dropdown\"\n                onClose={() => setShowDropdown(false)}\n              >\n                <p onClick={() => props.removeCard(props.boardId, id)}>\n                  Delete Card\n                </p>\n              </Dropdown>\n            )}\n          </div>\n        </div>\n        <div className=\"card_title\">{title}</div>\n        <div className=\"card_footer\">\n          {date && (\n            <p className=\"card_footer_item\">\n              <Clock className=\"card_footer_icon\" />\n              {formatDate(date)}\n            </p>\n          )}\n          {tasks && tasks?.length > 0 && (\n            <p className=\"card_footer_item\">\n              <CheckSquare className=\"card_footer_icon\" />\n              {tasks?.filter((item) => item.completed)?.length}/{tasks?.length}\n            </p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Card;\n","import React, { useState } from \"react\";\nimport { MoreHorizontal } from \"react-feather\";\n\nimport Card from \"../Card/Card\";\nimport Dropdown from \"../Dropdown/Dropdown\";\nimport Editable from \"../Editabled/Editable\";\n\nimport \"./Board.css\";\n\nfunction Board(props) {\n  const [showDropdown, setShowDropdown] = useState(false);\n\n  return (\n    <div className=\"board\">\n      <div className=\"board_header\">\n        <p className=\"board_header_title\">\n          {props.board?.title}\n          <span>{props.board?.cards?.length || 0}</span>\n        </p>\n        <div\n          className=\"board_header_title_more\"\n          onClick={() => setShowDropdown(true)}\n        >\n          <MoreHorizontal />\n          {showDropdown && (\n            <Dropdown\n              class=\"board_dropdown\"\n              onClose={() => setShowDropdown(false)}\n            >\n              <p onClick={() => props.removeBoard()}>Delete Board</p>\n             \n            </Dropdown>\n          )}\n        </div>\n      </div>\n      <div className=\"board_cards custom-scroll\">\n        {props.board?.cards?.map((item) => (\n          <Card\n            key={item.id}\n            card={item}\n            boardId={props.board.id}\n            removeCard={props.removeCard}\n            dragEntered={props.dragEntered}\n            dragEnded={props.dragEnded}\n            updateCard={props.updateCard}\n          />\n        ))}\n        <Editable\n          text=\"+ Add Card\"\n          placeholder=\"Enter Card Title\"\n          displayClass=\"board_add-card\"\n          editClass=\"board_add-card_edit\"\n          onSubmit={(value) => props.addCard(props.board?.id, value)}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Board;\n","export const Instructions = ({onDismiss:dismiss}) => {\r\n    return (\r\n        <div \r\n            className=\"card_body \" \r\n            style={{zIndex: 2000}}>\r\n          \r\n                <div className=\"card-header\">\r\n                    <span>Instructions</span>\r\n                    <button type=\"button\" className=\"btn-close5\" aria-label=\"Close\" onClick={()=>dismiss()}>X</button>\r\n             </div>\r\n                <hr/>\r\n                <div className=\"card-body1\">\r\n                    <ul>\r\n                        <li>You can add a board and cards by clicking on \"Add Board\" and \"Add cards\" respectively.</li>\r\n                        <li>You can delete an item by clicking on triple dot icon.</li>\r\n                        <li>You can drag a card from one board to another.</li>\r\n                        <li>You can add title, description, date, labels and tasks by clicking on card. </li>\r\n                        <li>If any functionality is not working properly, please check your internet connection and refresh the page.</li>\r\n                        <li>Thanks!😊</li>\r\n                    </ul>\r\n                </div>\r\n            \r\n        </div>    \r\n    )\r\n}","import React, { useEffect, useState } from \"react\";\n\nimport Board from \"./Components/Board/Board\";\nimport { Instructions } from './Instructions';\nimport \"./Instructions.css\"\nimport \"./App.css\";\nimport Editable from \"./Components/Editabled/Editable\";\n\nfunction App() {\n  const [hideInstructions, setHideInstructions] = useState(true);\n\n  const showInstructions = () => {\n    setHideInstructions(false);\n  }\n  const [boards, setBoards] = useState(\n    JSON.parse(localStorage.getItem(\"prac-kanban\")) || []\n  );\n\n  const [targetCard, setTargetCard] = useState({\n    bid: \"\",\n    cid: \"\",\n  });\n\n  const addboardHandler = (name) => {\n    const tempBoards = [...boards];\n    tempBoards.push({\n      id: Date.now() + Math.random() * 2,\n      title: name,\n      cards: [],\n    });\n    setBoards(tempBoards);\n  };\n\n  const removeBoard = (id) => {\n    const index = boards.findIndex((item) => item.id === id);\n    if (index < 0) return;\n\n    const tempBoards = [...boards];\n    tempBoards.splice(index, 1);\n    setBoards(tempBoards);\n  };\n\n  const addCardHandler = (id, title) => {\n    const index = boards.findIndex((item) => item.id === id);\n    if (index < 0) return;\n\n    const tempBoards = [...boards];\n    tempBoards[index].cards.push({\n      id: Date.now() + Math.random() * 2,\n      title,\n      labels: [],\n      date: \"\",\n      tasks: [],\n    });\n    setBoards(tempBoards);\n  };\n\n  const removeCard = (bid, cid) => {\n    const index = boards.findIndex((item) => item.id === bid);\n    if (index < 0) return;\n\n    const tempBoards = [...boards];\n    const cards = tempBoards[index].cards;\n\n    const cardIndex = cards.findIndex((item) => item.id === cid);\n    if (cardIndex < 0) return;\n\n    cards.splice(cardIndex, 1);\n    setBoards(tempBoards);\n  };\n\n  const dragEnded = (bid, cid) => {\n    let s_boardIndex, s_cardIndex, t_boardIndex, t_cardIndex;\n    s_boardIndex = boards.findIndex((item) => item.id === bid);\n    if (s_boardIndex < 0) return;\n\n    s_cardIndex = boards[s_boardIndex]?.cards?.findIndex(\n      (item) => item.id === cid\n    );\n    if (s_cardIndex < 0) return;\n\n    t_boardIndex = boards.findIndex((item) => item.id === targetCard.bid);\n    if (t_boardIndex < 0) return;\n\n    t_cardIndex = boards[t_boardIndex]?.cards?.findIndex(\n      (item) => item.id === targetCard.cid\n    );\n    if (t_cardIndex < 0) return;\n\n    const tempBoards = [...boards];\n    const sourceCard = tempBoards[s_boardIndex].cards[s_cardIndex];\n    tempBoards[s_boardIndex].cards.splice(s_cardIndex, 1);\n    tempBoards[t_boardIndex].cards.splice(t_cardIndex, 0, sourceCard);\n    setBoards(tempBoards);\n\n    setTargetCard({\n      bid: \"\",\n      cid: \"\",\n    });\n  };\n\n  const dragEntered = (bid, cid) => {\n    if (targetCard.cid === cid) return;\n    setTargetCard({\n      bid,\n      cid,\n    });\n  };\n\n  const updateCard = (bid, cid, card) => {\n    const index = boards.findIndex((item) => item.id === bid);\n    if (index < 0) return;\n\n    const tempBoards = [...boards];\n    const cards = tempBoards[index].cards;\n\n    const cardIndex = cards.findIndex((item) => item.id === cid);\n    if (cardIndex < 0) return;\n\n    tempBoards[index].cards[cardIndex] = card;\n\n    setBoards(tempBoards);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"prac-kanban\", JSON.stringify(boards));\n  }, [boards]);\n\n  return (\n    <div className=\"app\">\n      <div className=\"app_nav\">\n        <h1>Kanban Board</h1>\n        <hr style={{height:\"0.5px\", borderWidth:\"0\",color:\"gray\",backgroundColor:\"gray\"}}/>\n        <h3>{`Hi! ${window.localStorage.getItem(\"name\")}`}</h3>\n      </div>\n      <div className=\"app_boards_container\">\n        <div className=\"app_boards\">\n          {boards.map((item) => (\n            <Board\n              key={item.id}\n              board={item}\n              addCard={addCardHandler}\n              removeBoard={() => removeBoard(item.id)}\n              removeCard={removeCard}\n              dragEnded={dragEnded}\n              dragEntered={dragEntered}\n              updateCard={updateCard}\n            />\n          ))}\n          <div className=\"app_boards_last\">\n            <Editable\n              displayClass=\"app_boards_add-board\"\n              editClass=\"app_boards_add-board_edit\"\n              placeholder=\"Enter Board Name\"\n              text=\"Add Board\"\n              buttonText=\"Add Board\"\n              onSubmit={addboardHandler}\n            />\n          </div>\n        </div>\n      </div>\n      <button className=\"Instructions\" \n                style={{borderColor: \"navy\"}}\n                onClick={()=>showInstructions()}>Insights✨</button>\n         {\n          !hideInstructions && <Instructions onDismiss={()=>setHideInstructions(true)}/>\n          }\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useState } from 'react'\r\nimport \"./Start.css\"\r\nconst Start = () => {\r\n    const [name,setname]=useState(\"\");\r\n\r\n     function handleSubmit(e){\r\n      if (e && e.preventDefault) e.preventDefault();\r\n       window.localStorage.setItem(\"name\",name);\r\n        window.location.href=\"./app\";\r\n     }\r\n  return (\r\n   <div className='bd'>\r\n   <div className='start_bd'>\r\n      <h1>Welcome to Kanban!</h1>\r\n   <input placeholder='Enter your name' onChange={(e)=>setname(e.target.value)}/>\r\n   <button onClick={handleSubmit}>Submit</button>\r\n   </div>\r\n \r\n   </div>\r\n  )\r\n}\r\n\r\nexport default Start","import React from 'react'\r\nimport App from \"./App\";\r\nimport { BrowserRouter as Router, Routes, Route} from 'react-router-dom'\r\nimport Start from \"./Components/Start/Start\";\r\nconst App1 = () => {\r\n  return (\r\n    <div>\r\n      <Router>\r\n      <Routes>\r\n      <Route exact path=\"/\" element={<Start />} />\r\n      <Route path=\"/app\" element={<App />} />\r\n    </Routes>\r\n   </Router> \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App1","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App1 from \"./App1\";\n\n\n\nReactDOM.render(\n  <React.StrictMode> \n   <App1/>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}